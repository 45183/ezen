1. 컴포넌트 별로 js파일 따로 만들어서 src/component에 저장
component 하위 폴더는 src 밖에 만들면 안됨
리액트 컴포넌트는 외부 폴더 인식 못함

2. 컴포넌트 안의 javascript는 대부분의 수식, 글자, 데이터 연산은 가능
객체형 자료는 그냥 읽으면 에러 발생




스프레드 연산자 예제
let arr1 = [1, 2, 3];
let arr2 = [...arr1, 5, 6, 7];
console.log(arr2)
arr2 = [1, 2, 3, 5, 6, 7];


json 데이터 비슷한 객체형 자료형
let obj1 = {
    a:1, 
    b:2
}
let obj2 = {
    ...obj1, 
    c:3,
    d:4
}

console.log(obj2)
obj2 = {a:1, b:2, c:3, d:4}






스프레드 연산자는 함수 호출에도 사용 가능

ex
function func(a, b, c){
    console.log(a, b, c);
};

let arr3 = [1, 2, 3];
func(...arr3);
-> 1 2 3 출력

func(arr3) -> 에러






함수 인풋값에 스프레드 연산자 적용 가능

function func2(...rest){
    console.log(rest);
};

func2(5, 6, 7, 8);
-> [5, 6, 7, 8]







스프레드 연산자는 아래처럼 사용도 가능
개별데이터와 스프레드 연산자를 이용한 분리된 배열로 나타남

function func3(input, ...rest){
    console.log(input);
    console.log(rest);
};

fun3(5, 6, 7, 8)

출력
5
[6, 7, 8]



function func4(...input, rest){} -> 에러 (스프레드 연산자는 마지막에만 가능)
스프레드 연산자를 사용한 변수는 마지막에 선언되어야 함
개별 데이터를 할당하고 남은 걸 배열에 배분하기 때문