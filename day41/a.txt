기존 프론트엔드 개발 실습과 이번 node.js 계열의 자바스크립트 코드가 다른점

만들어진 서버와 데이터를 통신해야 함 (내 웹서비스 구동과 서비스 이용자의 데이터는 어디엔가는 존재해야 하므로)

그래서 기존 웹서비스 대비 우리가 추가한 사항
1. 서버세팅(포트 배분하면서 우리 데이터가 통신될 서버를 만들었음)
2. REST API를 통한 서버와의 소통

콜백, 프라미스, async 등의 모든 복잡한 개념은 서버의 데이터 요청 및 후속 처리가 순서에 맞게
그리고 오류 메세지 처리 등을 진행할 수 있게 존재하는 것


여기서 서버와의 소통을 위한 장치가 REST API 코드
REST API란 Representational State Transfer 라고 해서 서버의 자원을 정의하고 자원에 대한 주소를 지정하는 방법을 의미

REST API의 대표적인 기능을 코드에 이식하여 서버 생성 후 웹 서비스와 (즉 클라이언트 사이드) 통신을 진행


어제 이식한 REST API 주요 기능 소개
GET / POST / PUT / DELETE

GET - 서버 자원을 가져오고자 할 때 사용

POST - 서버에 자원을 등록할 때 사용

PUT - 서버 자원을 바꿀 때 (데이터의 수정)

DELETE - 서버의 자원을 삭제

OPTIONS - 통신 옵션의 설명


쿠키와 세션 (로그인) 
쿠키 - 내가 로그인 하는 동안 서버는 로그인 사실을 기억해야 함